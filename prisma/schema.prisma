// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Employee {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(HRD)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Brand {
  id      Int       @id @default(autoincrement())
  name    String
  product Product[]
}

model Product {
  id             String           @id @default(uuid())
  name           String
  brandId        Int
  brand          Brand            @relation(fields: [brandId], references: [id])
  attribute      Attribute[]
  productVariant ProductVariant[]
}

model ProductVariant {
  id          Int       @id @default(autoincrement())
  productId   String
  attributeId Int
  attribute   Attribute @relation(fields: [attributeId], references: [id])
  product     Product   @relation(fields: [productId], references: [id])
}

model Attribute {
  id             Int              @id @default(autoincrement())
  name           String
  productId      String
  product        Product          @relation(fields: [productId], references: [id])
  attributeValue AttributeValue[]
  productVariant ProductVariant[]
}

model AttributeValue {
  id          Int       @id @default(autoincrement())
  name        String
  attribute   Attribute @relation(fields: [attributeId], references: [id])
  attributeId Int
}

model Warehouse {
  id        String   @id @default(uuid())
  name      String
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  HRD
  WAREHOUSE
  FINANCE
  IT
}

// model User {
//   id      Int      @id @default(autoincrement())
//   email   String   @unique
//   name    String?
//   role    Role     @default(USER)
//   posts   Post[]
//   profile Profile?
// }

// model Profile {
//   id     Int    @id @default(autoincrement())
//   bio    String
//   user   User   @relation(fields: [userId], references: [id])
//   userId Int    @unique
// }

// model Post {
//   id         Int        @id @default(autoincrement())
//   createdAt  DateTime   @default(now())
//   title      String
//   published  Boolean    @default(false)
//   author     User       @relation(fields: [authorId], references: [id])
//   authorId   Int
//   categories Category[] @relation(references: [id])
// }

// model Category {
//   id    Int    @id @default(autoincrement())
//   name  String
//   posts Post[] @relation(references: [id])
// }

// enum Role {
//   USER
//   ADMIN
// }
